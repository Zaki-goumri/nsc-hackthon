{
  "version": 3,
  "sources": ["../../../../src/schemas/3.1/compliance/path-item-object.test.ts"],
  "sourcesContent": ["import { describe, expect, it } from 'vitest'\n\nimport { PathItemObjectSchema } from '../unprocessed/path-item-object'\n\ndescribe('path-item', () => {\n  describe('PathItemObjectSchema', () => {\n    // https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.1.1.md#path-item-object-example\n    it('Path Item Object Example', () => {\n      const result = PathItemObjectSchema.parse({\n        get: {\n          description: 'Returns pets based on ID',\n          summary: 'Find pets by ID',\n          operationId: 'getPetsById',\n          responses: {\n            200: {\n              description: 'pet response',\n              content: {\n                '*/*': {\n                  schema: {\n                    type: 'array',\n                    items: {\n                      $ref: '#/components/schemas/Pet',\n                    },\n                  },\n                },\n              },\n            },\n            default: {\n              description: 'error payload',\n              content: {\n                'text/html': {\n                  schema: {\n                    $ref: '#/components/schemas/ErrorModel',\n                  },\n                },\n              },\n            },\n          },\n        },\n        parameters: [\n          {\n            name: 'id',\n            in: 'path',\n            description: 'ID of pet to use',\n            required: true,\n            schema: {\n              type: 'array',\n              items: {\n                type: 'string',\n              },\n            },\n            style: 'simple',\n          },\n        ],\n      })\n\n      expect(result).toEqual({\n        get: {\n          description: 'Returns pets based on ID',\n          summary: 'Find pets by ID',\n          operationId: 'getPetsById',\n          responses: {\n            200: {\n              description: 'pet response',\n              content: {\n                '*/*': {\n                  schema: {\n                    type: 'array',\n                    items: {\n                      $ref: '#/components/schemas/Pet',\n                    },\n                  },\n                },\n              },\n            },\n            default: {\n              description: 'error payload',\n              content: {\n                'text/html': {\n                  schema: {\n                    $ref: '#/components/schemas/ErrorModel',\n                  },\n                },\n              },\n            },\n          },\n        },\n        parameters: [\n          {\n            name: 'id',\n            in: 'path',\n            description: 'ID of pet to use',\n            required: true,\n            schema: {\n              type: 'array',\n              items: {\n                type: 'string',\n              },\n            },\n            style: 'simple',\n          },\n        ],\n      })\n    })\n  })\n})\n"],
  "mappings": "AAAA,SAAS,UAAU,QAAQ,UAAU;AAErC,SAAS,4BAA4B;AAErC,SAAS,aAAa,MAAM;AAC1B,WAAS,wBAAwB,MAAM;AAErC,OAAG,4BAA4B,MAAM;AACnC,YAAM,SAAS,qBAAqB,MAAM;AAAA,QACxC,KAAK;AAAA,UACH,aAAa;AAAA,UACb,SAAS;AAAA,UACT,aAAa;AAAA,UACb,WAAW;AAAA,YACT,KAAK;AAAA,cACH,aAAa;AAAA,cACb,SAAS;AAAA,gBACP,OAAO;AAAA,kBACL,QAAQ;AAAA,oBACN,MAAM;AAAA,oBACN,OAAO;AAAA,sBACL,MAAM;AAAA,oBACR;AAAA,kBACF;AAAA,gBACF;AAAA,cACF;AAAA,YACF;AAAA,YACA,SAAS;AAAA,cACP,aAAa;AAAA,cACb,SAAS;AAAA,gBACP,aAAa;AAAA,kBACX,QAAQ;AAAA,oBACN,MAAM;AAAA,kBACR;AAAA,gBACF;AAAA,cACF;AAAA,YACF;AAAA,UACF;AAAA,QACF;AAAA,QACA,YAAY;AAAA,UACV;AAAA,YACE,MAAM;AAAA,YACN,IAAI;AAAA,YACJ,aAAa;AAAA,YACb,UAAU;AAAA,YACV,QAAQ;AAAA,cACN,MAAM;AAAA,cACN,OAAO;AAAA,gBACL,MAAM;AAAA,cACR;AAAA,YACF;AAAA,YACA,OAAO;AAAA,UACT;AAAA,QACF;AAAA,MACF,CAAC;AAED,aAAO,MAAM,EAAE,QAAQ;AAAA,QACrB,KAAK;AAAA,UACH,aAAa;AAAA,UACb,SAAS;AAAA,UACT,aAAa;AAAA,UACb,WAAW;AAAA,YACT,KAAK;AAAA,cACH,aAAa;AAAA,cACb,SAAS;AAAA,gBACP,OAAO;AAAA,kBACL,QAAQ;AAAA,oBACN,MAAM;AAAA,oBACN,OAAO;AAAA,sBACL,MAAM;AAAA,oBACR;AAAA,kBACF;AAAA,gBACF;AAAA,cACF;AAAA,YACF;AAAA,YACA,SAAS;AAAA,cACP,aAAa;AAAA,cACb,SAAS;AAAA,gBACP,aAAa;AAAA,kBACX,QAAQ;AAAA,oBACN,MAAM;AAAA,kBACR;AAAA,gBACF;AAAA,cACF;AAAA,YACF;AAAA,UACF;AAAA,QACF;AAAA,QACA,YAAY;AAAA,UACV;AAAA,YACE,MAAM;AAAA,YACN,IAAI;AAAA,YACJ,aAAa;AAAA,YACb,UAAU;AAAA,YACV,QAAQ;AAAA,cACN,MAAM;AAAA,cACN,OAAO;AAAA,gBACL,MAAM;AAAA,cACR;AAAA,YACF;AAAA,YACA,OAAO;AAAA,UACT;AAAA,QACF;AAAA,MACF,CAAC;AAAA,IACH,CAAC;AAAA,EACH,CAAC;AACH,CAAC;",
  "names": []
}
