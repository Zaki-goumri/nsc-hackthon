{
  "version": 3,
  "sources": ["../../../src/schemas/extensions/x-tag-groups.test.ts"],
  "sourcesContent": ["import { describe, expect, it } from 'vitest'\nimport { XTagGroupsSchema } from './x-tag-groups'\n\ndescribe('XTagGroupsSchema', () => {\n  it('accepts valid tag groups array', () => {\n    const result = XTagGroupsSchema.parse([\n      {\n        name: 'Core',\n        tags: ['users', 'auth'],\n      },\n      {\n        name: 'Products',\n        tags: ['inventory', 'orders'],\n      },\n    ])\n    expect(result).toEqual([\n      {\n        name: 'Core',\n        tags: ['users', 'auth'],\n      },\n      {\n        name: 'Products',\n        tags: ['inventory', 'orders'],\n      },\n    ])\n  })\n\n  it('accepts empty array', () => {\n    const result = XTagGroupsSchema.parse([])\n    expect(result).toEqual([])\n  })\n\n  it('removes groups without name', () => {\n    const result = XTagGroupsSchema.parse([\n      {\n        // missing name\n        tags: ['users'],\n      },\n    ])\n\n    expect(result).toEqual([])\n  })\n\n  it('ensures tags is an array of strings', () => {\n    const result = XTagGroupsSchema.parse([\n      {\n        name: 'Core',\n        // invalid: number in tags array\n        tags: [123, 'users'],\n      },\n    ])\n\n    expect(result).toEqual([\n      {\n        name: 'Core',\n        tags: ['123', 'users'],\n      },\n    ])\n  })\n})\n"],
  "mappings": "AAAA,SAAS,UAAU,QAAQ,UAAU;AACrC,SAAS,wBAAwB;AAEjC,SAAS,oBAAoB,MAAM;AACjC,KAAG,kCAAkC,MAAM;AACzC,UAAM,SAAS,iBAAiB,MAAM;AAAA,MACpC;AAAA,QACE,MAAM;AAAA,QACN,MAAM,CAAC,SAAS,MAAM;AAAA,MACxB;AAAA,MACA;AAAA,QACE,MAAM;AAAA,QACN,MAAM,CAAC,aAAa,QAAQ;AAAA,MAC9B;AAAA,IACF,CAAC;AACD,WAAO,MAAM,EAAE,QAAQ;AAAA,MACrB;AAAA,QACE,MAAM;AAAA,QACN,MAAM,CAAC,SAAS,MAAM;AAAA,MACxB;AAAA,MACA;AAAA,QACE,MAAM;AAAA,QACN,MAAM,CAAC,aAAa,QAAQ;AAAA,MAC9B;AAAA,IACF,CAAC;AAAA,EACH,CAAC;AAED,KAAG,uBAAuB,MAAM;AAC9B,UAAM,SAAS,iBAAiB,MAAM,CAAC,CAAC;AACxC,WAAO,MAAM,EAAE,QAAQ,CAAC,CAAC;AAAA,EAC3B,CAAC;AAED,KAAG,+BAA+B,MAAM;AACtC,UAAM,SAAS,iBAAiB,MAAM;AAAA,MACpC;AAAA;AAAA,QAEE,MAAM,CAAC,OAAO;AAAA,MAChB;AAAA,IACF,CAAC;AAED,WAAO,MAAM,EAAE,QAAQ,CAAC,CAAC;AAAA,EAC3B,CAAC;AAED,KAAG,uCAAuC,MAAM;AAC9C,UAAM,SAAS,iBAAiB,MAAM;AAAA,MACpC;AAAA,QACE,MAAM;AAAA;AAAA,QAEN,MAAM,CAAC,KAAK,OAAO;AAAA,MACrB;AAAA,IACF,CAAC;AAED,WAAO,MAAM,EAAE,QAAQ;AAAA,MACrB;AAAA,QACE,MAAM;AAAA,QACN,MAAM,CAAC,OAAO,OAAO;AAAA,MACvB;AAAA,IACF,CAAC;AAAA,EACH,CAAC;AACH,CAAC;",
  "names": []
}
