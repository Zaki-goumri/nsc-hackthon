{
  "version": 3,
  "sources": ["../../src/api-client/api-client-plugin.ts"],
  "sourcesContent": ["import { z } from 'zod'\n\nconst SectionViewSchema = z.object({\n  title: z.string().optional(),\n  // Since this is meant to be a Vue component, we'll use unknown\n  component: z.unknown(),\n  props: z.record(z.any()).optional(),\n})\n\nconst ViewsSchema = z.object({\n  'request.section': z.array(SectionViewSchema),\n  'response.section': z.array(SectionViewSchema),\n})\n\nconst HooksSchema = z.object({\n  onBeforeRequest: z.function().returns(z.union([z.void(), z.promise(z.void())])),\n  onResponseReceived: z\n    .function()\n    .args(\n      z.object({\n        response: z.instanceof(Response),\n        // Ideally, we'd have the Operation type here, but we don't.\n        operation: z.record(z.any()),\n      }),\n    )\n    .returns(z.union([z.void(), z.promise(z.void())])),\n})\n\nexport const ApiClientPluginSchema = z.function().returns(\n  z.object({\n    name: z.string(),\n    views: ViewsSchema,\n    hooks: HooksSchema,\n  }),\n)\n\nexport type ApiClientPlugin = z.infer<typeof ApiClientPluginSchema>\n"],
  "mappings": "AAAA,SAAS,SAAS;AAElB,MAAM,oBAAoB,EAAE,OAAO;AAAA,EACjC,OAAO,EAAE,OAAO,EAAE,SAAS;AAAA;AAAA,EAE3B,WAAW,EAAE,QAAQ;AAAA,EACrB,OAAO,EAAE,OAAO,EAAE,IAAI,CAAC,EAAE,SAAS;AACpC,CAAC;AAED,MAAM,cAAc,EAAE,OAAO;AAAA,EAC3B,mBAAmB,EAAE,MAAM,iBAAiB;AAAA,EAC5C,oBAAoB,EAAE,MAAM,iBAAiB;AAC/C,CAAC;AAED,MAAM,cAAc,EAAE,OAAO;AAAA,EAC3B,iBAAiB,EAAE,SAAS,EAAE,QAAQ,EAAE,MAAM,CAAC,EAAE,KAAK,GAAG,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;AAAA,EAC9E,oBAAoB,EACjB,SAAS,EACT;AAAA,IACC,EAAE,OAAO;AAAA,MACP,UAAU,EAAE,WAAW,QAAQ;AAAA;AAAA,MAE/B,WAAW,EAAE,OAAO,EAAE,IAAI,CAAC;AAAA,IAC7B,CAAC;AAAA,EACH,EACC,QAAQ,EAAE,MAAM,CAAC,EAAE,KAAK,GAAG,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;AACrD,CAAC;AAEM,MAAM,wBAAwB,EAAE,SAAS,EAAE;AAAA,EAChD,EAAE,OAAO;AAAA,IACP,MAAM,EAAE,OAAO;AAAA,IACf,OAAO;AAAA,IACP,OAAO;AAAA,EACT,CAAC;AACH;",
  "names": []
}
