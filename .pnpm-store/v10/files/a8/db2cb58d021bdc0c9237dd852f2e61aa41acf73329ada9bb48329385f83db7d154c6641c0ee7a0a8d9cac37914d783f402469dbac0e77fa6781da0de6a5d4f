{
  "version": 3,
  "sources": ["../../../../src/schemas/3.1/compliance/security-scheme-object.test.ts"],
  "sourcesContent": ["import { describe, expect, it } from 'vitest'\n\nimport { SecuritySchemeObjectSchema } from '../unprocessed/security-scheme-object'\n\ndescribe('security-scheme-object', () => {\n  describe('SecuritySchemeObjectSchema', () => {\n    // https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.1.1.md#security-scheme-object-examples\n    describe('Security Scheme Object Examples', () => {\n      it('Basic Authentication Example', () => {\n        const result = SecuritySchemeObjectSchema.parse({\n          type: 'http',\n          scheme: 'basic',\n        })\n\n        expect(result).toEqual({\n          type: 'http',\n          scheme: 'basic',\n        })\n      })\n\n      it('API Key Example', () => {\n        const result = SecuritySchemeObjectSchema.parse({\n          type: 'apiKey',\n          name: 'api-key',\n          in: 'header',\n        })\n\n        expect(result).toEqual({\n          type: 'apiKey',\n          name: 'api-key',\n          in: 'header',\n        })\n      })\n\n      it('JWT Bearer Example', () => {\n        const result = SecuritySchemeObjectSchema.parse({\n          type: 'http',\n          scheme: 'bearer',\n          bearerFormat: 'JWT',\n        })\n\n        expect(result).toEqual({\n          type: 'http',\n          scheme: 'bearer',\n          bearerFormat: 'JWT',\n        })\n      })\n\n      it('MutualTLS Example', () => {\n        const result = SecuritySchemeObjectSchema.parse({\n          type: 'mutualTLS',\n          description: 'Cert must be signed by example.com CA',\n        })\n\n        expect(result).toEqual({\n          type: 'mutualTLS',\n          description: 'Cert must be signed by example.com CA',\n        })\n      })\n\n      it('Implicit OAuth2 Example', () => {\n        const result = SecuritySchemeObjectSchema.parse({\n          type: 'oauth2',\n          flows: {\n            implicit: {\n              authorizationUrl: 'https://example.com/api/oauth/dialog',\n              scopes: {\n                'write:pets': 'modify pets in your account',\n                'read:pets': 'read your pets',\n              },\n            },\n          },\n        })\n\n        expect(result).toEqual({\n          type: 'oauth2',\n          flows: {\n            implicit: {\n              authorizationUrl: 'https://example.com/api/oauth/dialog',\n              scopes: {\n                'write:pets': 'modify pets in your account',\n                'read:pets': 'read your pets',\n              },\n            },\n          },\n        })\n      })\n    })\n  })\n\n  // https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.1.1.md#oauth-flow-object-example\n  describe('OAuth Flow Object Example', () => {\n    it('Implicit Flow', () => {\n      const result = SecuritySchemeObjectSchema.parse({\n        type: 'oauth2',\n        flows: {\n          implicit: {\n            authorizationUrl: 'https://example.com/api/oauth/dialog',\n            scopes: {\n              'write:pets': 'modify pets in your account',\n              'read:pets': 'read your pets',\n            },\n          },\n          authorizationCode: {\n            authorizationUrl: 'https://example.com/api/oauth/dialog',\n            tokenUrl: 'https://example.com/api/oauth/token',\n            scopes: {\n              'write:pets': 'modify pets in your account',\n              'read:pets': 'read your pets',\n            },\n          },\n        },\n      })\n\n      expect(result).toEqual({\n        type: 'oauth2',\n        flows: {\n          implicit: {\n            authorizationUrl: 'https://example.com/api/oauth/dialog',\n            scopes: {\n              'write:pets': 'modify pets in your account',\n              'read:pets': 'read your pets',\n            },\n          },\n          authorizationCode: {\n            authorizationUrl: 'https://example.com/api/oauth/dialog',\n            tokenUrl: 'https://example.com/api/oauth/token',\n            scopes: {\n              'write:pets': 'modify pets in your account',\n              'read:pets': 'read your pets',\n            },\n          },\n        },\n      })\n    })\n  })\n})\n"],
  "mappings": "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",
  "names": []
}
