{
  "version": 3,
  "sources": ["../../../../src/schemas/3.1/compliance/example-object.test.ts"],
  "sourcesContent": ["import { describe, expect, it } from 'vitest'\n\nimport { OperationObjectSchema } from '../unprocessed/operation-object'\n\ndescribe('example-object', () => {\n  describe('ExampleObject', () => {\n    // https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.1.1.md#example-object-examples\n    it('Example Object Example', () => {\n      const result = OperationObjectSchema.parse({\n        requestBody: {\n          content: {\n            'application/json': {\n              schema: {\n                $ref: '#/components/schemas/Address',\n              },\n              examples: {\n                foo: {\n                  summary: 'A foo example',\n                  value: {\n                    foo: 'bar',\n                  },\n                },\n                bar: {\n                  summary: 'A bar example',\n                  value: {\n                    bar: 'baz',\n                  },\n                },\n              },\n            },\n            'application/xml': {\n              examples: {\n                xmlExample: {\n                  summary: 'This is an example in XML',\n                  externalValue: 'https://example.org/examples/address-example.xml',\n                },\n              },\n            },\n            'text/plain': {\n              examples: {\n                textExample: {\n                  summary: 'This is a text example',\n                  externalValue: 'https://foo.bar/examples/address-example.txt',\n                },\n              },\n            },\n          },\n        },\n      })\n\n      expect(result).toEqual({\n        requestBody: {\n          content: {\n            'application/json': {\n              schema: {\n                $ref: '#/components/schemas/Address',\n              },\n              examples: {\n                foo: {\n                  summary: 'A foo example',\n                  value: {\n                    foo: 'bar',\n                  },\n                },\n                bar: {\n                  summary: 'A bar example',\n                  value: {\n                    bar: 'baz',\n                  },\n                },\n              },\n            },\n            'application/xml': {\n              examples: {\n                xmlExample: {\n                  summary: 'This is an example in XML',\n                  externalValue: 'https://example.org/examples/address-example.xml',\n                },\n              },\n            },\n            'text/plain': {\n              examples: {\n                textExample: {\n                  summary: 'This is a text example',\n                  externalValue: 'https://foo.bar/examples/address-example.txt',\n                },\n              },\n            },\n          },\n        },\n      })\n    })\n  })\n})\n"],
  "mappings": "AAAA,SAAS,UAAU,QAAQ,UAAU;AAErC,SAAS,6BAA6B;AAEtC,SAAS,kBAAkB,MAAM;AAC/B,WAAS,iBAAiB,MAAM;AAE9B,OAAG,0BAA0B,MAAM;AACjC,YAAM,SAAS,sBAAsB,MAAM;AAAA,QACzC,aAAa;AAAA,UACX,SAAS;AAAA,YACP,oBAAoB;AAAA,cAClB,QAAQ;AAAA,gBACN,MAAM;AAAA,cACR;AAAA,cACA,UAAU;AAAA,gBACR,KAAK;AAAA,kBACH,SAAS;AAAA,kBACT,OAAO;AAAA,oBACL,KAAK;AAAA,kBACP;AAAA,gBACF;AAAA,gBACA,KAAK;AAAA,kBACH,SAAS;AAAA,kBACT,OAAO;AAAA,oBACL,KAAK;AAAA,kBACP;AAAA,gBACF;AAAA,cACF;AAAA,YACF;AAAA,YACA,mBAAmB;AAAA,cACjB,UAAU;AAAA,gBACR,YAAY;AAAA,kBACV,SAAS;AAAA,kBACT,eAAe;AAAA,gBACjB;AAAA,cACF;AAAA,YACF;AAAA,YACA,cAAc;AAAA,cACZ,UAAU;AAAA,gBACR,aAAa;AAAA,kBACX,SAAS;AAAA,kBACT,eAAe;AAAA,gBACjB;AAAA,cACF;AAAA,YACF;AAAA,UACF;AAAA,QACF;AAAA,MACF,CAAC;AAED,aAAO,MAAM,EAAE,QAAQ;AAAA,QACrB,aAAa;AAAA,UACX,SAAS;AAAA,YACP,oBAAoB;AAAA,cAClB,QAAQ;AAAA,gBACN,MAAM;AAAA,cACR;AAAA,cACA,UAAU;AAAA,gBACR,KAAK;AAAA,kBACH,SAAS;AAAA,kBACT,OAAO;AAAA,oBACL,KAAK;AAAA,kBACP;AAAA,gBACF;AAAA,gBACA,KAAK;AAAA,kBACH,SAAS;AAAA,kBACT,OAAO;AAAA,oBACL,KAAK;AAAA,kBACP;AAAA,gBACF;AAAA,cACF;AAAA,YACF;AAAA,YACA,mBAAmB;AAAA,cACjB,UAAU;AAAA,gBACR,YAAY;AAAA,kBACV,SAAS;AAAA,kBACT,eAAe;AAAA,gBACjB;AAAA,cACF;AAAA,YACF;AAAA,YACA,cAAc;AAAA,cACZ,UAAU;AAAA,gBACR,aAAa;AAAA,kBACX,SAAS;AAAA,kBACT,eAAe;AAAA,gBACjB;AAAA,cACF;AAAA,YACF;AAAA,UACF;AAAA,QACF;AAAA,MACF,CAAC;AAAA,IACH,CAAC;AAAA,EACH,CAAC;AACH,CAAC;",
  "names": []
}
