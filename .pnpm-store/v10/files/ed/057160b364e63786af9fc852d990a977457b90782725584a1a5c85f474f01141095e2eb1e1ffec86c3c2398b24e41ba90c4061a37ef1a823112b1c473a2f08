{
  "version": 3,
  "sources": ["../../../../src/schemas/3.1/compliance/reference-object.test.ts"],
  "sourcesContent": ["import { describe, expect, it } from 'vitest'\n\nimport { ComponentsObjectSchema } from '../unprocessed/components-object'\nimport { EncodingObjectSchema } from '../unprocessed/encoding-object'\nimport { HeaderObjectSchema } from '../unprocessed/header-object'\nimport { MediaTypeObjectSchema } from '../unprocessed/media-type-object'\nimport { OperationObjectSchema } from '../unprocessed/operation-object'\nimport { ParameterObjectSchema } from '../unprocessed/parameter-object'\nimport { PathItemObjectSchema } from '../unprocessed/path-item-object'\nimport { ReferenceObjectSchema } from '../unprocessed/reference-object'\nimport { ResponseObjectSchema } from '../unprocessed/response-object'\nimport { ResponsesObjectSchema } from '../unprocessed/responses-object'\n\n// For these tests, I\u2019ve gone through the OpenAPI Specification and found places where the \u201CReference Object\u201D is used.\n\ndescribe('reference-object', () => {\n  describe('ReferenceObjectSchema', () => {\n    // https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.1.1.md#reference-object-example\n    it('Reference Object Example', () => {\n      const result = ReferenceObjectSchema.parse({\n        $ref: '#/components/schemas/Pet',\n      })\n\n      expect(result).toEqual({\n        $ref: '#/components/schemas/Pet',\n      })\n    })\n  })\n\n  describe('PathItemObjectSchema', () => {\n    it('path item object with $ref', () => {\n      const result = PathItemObjectSchema.parse({\n        $ref: '#/components/pathItems/foobar',\n      })\n\n      expect(result).toEqual({\n        $ref: '#/components/pathItems/foobar',\n      })\n    })\n\n    it('parameters with $ref', () => {\n      const result = PathItemObjectSchema.parse({\n        parameters: [\n          {\n            $ref: '#/components/parameters/foobar',\n          },\n        ],\n      })\n\n      expect(result).toEqual({\n        parameters: [\n          {\n            $ref: '#/components/parameters/foobar',\n          },\n        ],\n      })\n    })\n  })\n\n  describe('OperationObjectSchema', () => {\n    it('operation object with $ref', () => {\n      const result = OperationObjectSchema.parse({\n        parameters: [\n          {\n            $ref: '#/components/parameters/foobar',\n          },\n        ],\n        requestBody: {\n          $ref: '#/components/requestBodies/foobar',\n        },\n        callbacks: {\n          foobar: {\n            $ref: '#/components/callbacks/foobar',\n          },\n        },\n      })\n\n      expect(result).toEqual({\n        parameters: [{ $ref: '#/components/parameters/foobar' }],\n        requestBody: {\n          $ref: '#/components/requestBodies/foobar',\n        },\n        callbacks: {\n          foobar: {\n            $ref: '#/components/callbacks/foobar',\n          },\n        },\n      })\n    })\n  })\n\n  describe('ParameterObjectSchema', () => {\n    it('parameter object with $ref', () => {\n      const result = ParameterObjectSchema.parse({\n        name: 'foobar',\n        in: 'query',\n        examples: {\n          foobar: {\n            $ref: '#/components/examples/foobar',\n          },\n        },\n      })\n\n      expect(result).toEqual({\n        name: 'foobar',\n        in: 'query',\n        examples: {\n          foobar: {\n            $ref: '#/components/examples/foobar',\n          },\n        },\n      })\n    })\n  })\n\n  describe('MediaTypeObjectSchema', () => {\n    it('media type object with $ref', () => {\n      const result = MediaTypeObjectSchema.parse({\n        examples: {\n          foobar: {\n            $ref: '#/components/examples/foobar',\n          },\n        },\n      })\n\n      expect(result).toEqual({\n        examples: {\n          foobar: { $ref: '#/components/examples/foobar' },\n        },\n      })\n    })\n  })\n\n  describe('EncodingObjectSchema', () => {\n    it('encoding object with $ref', () => {\n      const result = EncodingObjectSchema.parse({\n        contentType: 'application/json',\n        headers: {\n          foobar: {\n            $ref: '#/components/headers/foobar',\n          },\n        },\n      })\n\n      expect(result).toEqual({\n        contentType: 'application/json',\n        headers: {\n          foobar: {\n            $ref: '#/components/headers/foobar',\n          },\n        },\n      })\n    })\n  })\n\n  describe('ResponsesObjectSchema', () => {\n    it('responses object with $ref', () => {\n      const result = ResponsesObjectSchema.parse({\n        200: {\n          $ref: '#/components/responses/foobar',\n        },\n      })\n\n      expect(result).toEqual({\n        200: {\n          $ref: '#/components/responses/foobar',\n        },\n      })\n    })\n  })\n\n  describe('ResponseObjectSchema', () => {\n    it('response object with $ref', () => {\n      const result = ResponseObjectSchema.parse({\n        description: 'foobar',\n        headers: {\n          foobar: {\n            $ref: '#/components/headers/foobar',\n          },\n        },\n        links: {\n          foobar: {\n            $ref: '#/components/links/foobar',\n          },\n        },\n      })\n\n      expect(result).toEqual({\n        description: 'foobar',\n        headers: {\n          foobar: { $ref: '#/components/headers/foobar' },\n        },\n        links: {\n          foobar: { $ref: '#/components/links/foobar' },\n        },\n      })\n    })\n  })\n\n  describe('HeaderObjectSchema', () => {\n    it('header object with $ref', () => {\n      const result = HeaderObjectSchema.parse({\n        examples: {\n          foobar: {\n            $ref: '#/components/examples/foobar',\n          },\n        },\n      })\n\n      expect(result).toEqual({\n        examples: {\n          foobar: { $ref: '#/components/examples/foobar' },\n        },\n      })\n    })\n  })\n\n  describe('ComponentsObjectSchema', () => {\n    it('schemas with $ref', () => {\n      const result = ComponentsObjectSchema.parse({\n        responses: {\n          200: {\n            $ref: '#/components/responses/foobar',\n          },\n        },\n        parameters: {\n          id: {\n            $ref: '#/components/parameters/foobar',\n          },\n        },\n        examples: {\n          foobar: {\n            $ref: '#/components/examples/foobar',\n          },\n        },\n        requestBodies: {\n          foobar: {\n            $ref: '#/components/requestBodies/foobar',\n          },\n        },\n        headers: {\n          foobar: {\n            $ref: '#/components/headers/foobar',\n          },\n        },\n        securitySchemes: {\n          foobar: {\n            $ref: '#/components/securitySchemes/foobar',\n          },\n        },\n        links: {\n          foobar: {\n            $ref: '#/components/links/foobar',\n          },\n        },\n        callbacks: {\n          foobar: {\n            $ref: '#/components/callbacks/foobar',\n          },\n        },\n      })\n\n      expect(result).toEqual({\n        responses: {\n          200: {\n            $ref: '#/components/responses/foobar',\n          },\n        },\n        parameters: {\n          id: {\n            $ref: '#/components/parameters/foobar',\n          },\n        },\n        examples: {\n          foobar: {\n            $ref: '#/components/examples/foobar',\n          },\n        },\n        requestBodies: {\n          foobar: {\n            $ref: '#/components/requestBodies/foobar',\n          },\n        },\n        headers: {\n          foobar: {\n            $ref: '#/components/headers/foobar',\n          },\n        },\n        securitySchemes: {\n          foobar: {\n            $ref: '#/components/securitySchemes/foobar',\n          },\n        },\n        links: {\n          foobar: {\n            $ref: '#/components/links/foobar',\n          },\n        },\n        callbacks: {\n          foobar: {\n            $ref: '#/components/callbacks/foobar',\n          },\n        },\n      })\n    })\n  })\n})\n"],
  "mappings": "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",
  "names": []
}
