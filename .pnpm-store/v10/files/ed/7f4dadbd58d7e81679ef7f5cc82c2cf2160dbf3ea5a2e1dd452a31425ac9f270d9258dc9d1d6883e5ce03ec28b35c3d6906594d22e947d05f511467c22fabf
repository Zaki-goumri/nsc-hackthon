{
  "version": 3,
  "sources": ["../../../../src/schemas/3.1/compliance/request-body-object.test.ts"],
  "sourcesContent": ["import { describe, expect, it } from 'vitest'\n\nimport { RequestBodyObjectSchema } from '../unprocessed/request-body-object'\n\ndescribe('request-body-object', () => {\n  describe('ContactObjectSchema', () => {\n    // https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.1.1.md#request-body-examples\n    describe('Request Body Examples', () => {\n      it('A request body with a referenced schema definition', () => {\n        const result = RequestBodyObjectSchema.parse({\n          description: 'user to add to the system',\n          content: {\n            'application/json': {\n              schema: {\n                $ref: '#/components/schemas/User',\n              },\n              examples: {\n                user: {\n                  summary: 'User Example',\n                  externalValue: 'https://foo.bar/examples/user-example.json',\n                },\n              },\n            },\n            'application/xml': {\n              schema: {\n                $ref: '#/components/schemas/User',\n              },\n              examples: {\n                user: {\n                  summary: 'User example in XML',\n                  externalValue: 'https://foo.bar/examples/user-example.xml',\n                },\n              },\n            },\n            'text/plain': {\n              examples: {\n                user: {\n                  summary: 'User example in Plain text',\n                  externalValue: 'https://foo.bar/examples/user-example.txt',\n                },\n              },\n            },\n            '*/*': {\n              examples: {\n                user: {\n                  summary: 'User example in other format',\n                  externalValue: 'https://foo.bar/examples/user-example.whatever',\n                },\n              },\n            },\n          },\n        })\n\n        expect(result).toEqual({\n          description: 'user to add to the system',\n          content: {\n            'application/json': {\n              schema: {\n                $ref: '#/components/schemas/User',\n              },\n              examples: {\n                user: {\n                  summary: 'User Example',\n                  externalValue: 'https://foo.bar/examples/user-example.json',\n                },\n              },\n            },\n            'application/xml': {\n              schema: {\n                $ref: '#/components/schemas/User',\n              },\n              examples: {\n                user: {\n                  summary: 'User example in XML',\n                  externalValue: 'https://foo.bar/examples/user-example.xml',\n                },\n              },\n            },\n            'text/plain': {\n              examples: {\n                user: {\n                  summary: 'User example in Plain text',\n                  externalValue: 'https://foo.bar/examples/user-example.txt',\n                },\n              },\n            },\n            '*/*': {\n              examples: {\n                user: {\n                  summary: 'User example in other format',\n                  externalValue: 'https://foo.bar/examples/user-example.whatever',\n                },\n              },\n            },\n          },\n        })\n      })\n    })\n  })\n})\n"],
  "mappings": "AAAA,SAAS,UAAU,QAAQ,UAAU;AAErC,SAAS,+BAA+B;AAExC,SAAS,uBAAuB,MAAM;AACpC,WAAS,uBAAuB,MAAM;AAEpC,aAAS,yBAAyB,MAAM;AACtC,SAAG,sDAAsD,MAAM;AAC7D,cAAM,SAAS,wBAAwB,MAAM;AAAA,UAC3C,aAAa;AAAA,UACb,SAAS;AAAA,YACP,oBAAoB;AAAA,cAClB,QAAQ;AAAA,gBACN,MAAM;AAAA,cACR;AAAA,cACA,UAAU;AAAA,gBACR,MAAM;AAAA,kBACJ,SAAS;AAAA,kBACT,eAAe;AAAA,gBACjB;AAAA,cACF;AAAA,YACF;AAAA,YACA,mBAAmB;AAAA,cACjB,QAAQ;AAAA,gBACN,MAAM;AAAA,cACR;AAAA,cACA,UAAU;AAAA,gBACR,MAAM;AAAA,kBACJ,SAAS;AAAA,kBACT,eAAe;AAAA,gBACjB;AAAA,cACF;AAAA,YACF;AAAA,YACA,cAAc;AAAA,cACZ,UAAU;AAAA,gBACR,MAAM;AAAA,kBACJ,SAAS;AAAA,kBACT,eAAe;AAAA,gBACjB;AAAA,cACF;AAAA,YACF;AAAA,YACA,OAAO;AAAA,cACL,UAAU;AAAA,gBACR,MAAM;AAAA,kBACJ,SAAS;AAAA,kBACT,eAAe;AAAA,gBACjB;AAAA,cACF;AAAA,YACF;AAAA,UACF;AAAA,QACF,CAAC;AAED,eAAO,MAAM,EAAE,QAAQ;AAAA,UACrB,aAAa;AAAA,UACb,SAAS;AAAA,YACP,oBAAoB;AAAA,cAClB,QAAQ;AAAA,gBACN,MAAM;AAAA,cACR;AAAA,cACA,UAAU;AAAA,gBACR,MAAM;AAAA,kBACJ,SAAS;AAAA,kBACT,eAAe;AAAA,gBACjB;AAAA,cACF;AAAA,YACF;AAAA,YACA,mBAAmB;AAAA,cACjB,QAAQ;AAAA,gBACN,MAAM;AAAA,cACR;AAAA,cACA,UAAU;AAAA,gBACR,MAAM;AAAA,kBACJ,SAAS;AAAA,kBACT,eAAe;AAAA,gBACjB;AAAA,cACF;AAAA,YACF;AAAA,YACA,cAAc;AAAA,cACZ,UAAU;AAAA,gBACR,MAAM;AAAA,kBACJ,SAAS;AAAA,kBACT,eAAe;AAAA,gBACjB;AAAA,cACF;AAAA,YACF;AAAA,YACA,OAAO;AAAA,cACL,UAAU;AAAA,gBACR,MAAM;AAAA,kBACJ,SAAS;AAAA,kBACT,eAAe;AAAA,gBACjB;AAAA,cACF;AAAA,YACF;AAAA,UACF;AAAA,QACF,CAAC;AAAA,MACH,CAAC;AAAA,IACH,CAAC;AAAA,EACH,CAAC;AACH,CAAC;",
  "names": []
}
