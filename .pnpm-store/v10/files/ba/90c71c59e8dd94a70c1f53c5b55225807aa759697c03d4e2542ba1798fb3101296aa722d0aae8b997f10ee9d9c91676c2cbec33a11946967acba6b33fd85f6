{
  "version": 3,
  "sources": ["../../../../src/schemas/3.1/compliance/media-type-object.test.ts"],
  "sourcesContent": ["import { describe, expect, it } from 'vitest'\n\nimport { MediaTypeObjectSchema } from '../unprocessed/media-type-object'\n\ndescribe('media-type-object', () => {\n  describe('MediaTypeObject', () => {\n    // https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.1.1.md#media-type-examples\n    it('Media Type Examples', () => {\n      const result = MediaTypeObjectSchema.parse({\n        schema: {\n          $ref: '#/components/schemas/Pet',\n        },\n        examples: {\n          cat: {\n            summary: 'An example of a cat',\n            value: {\n              name: 'Fluffy',\n              petType: 'Cat',\n              color: 'White',\n              gender: 'male',\n              breed: 'Persian',\n            },\n          },\n          dog: {\n            summary: \"An example of a dog with a cat's name\",\n            value: {\n              name: 'Puma',\n              petType: 'Dog',\n              color: 'Black',\n              gender: 'Female',\n              breed: 'Mixed',\n            },\n          },\n          frog: {\n            $ref: '#/components/examples/frog-example',\n          },\n        },\n      })\n\n      expect(result).toEqual({\n        schema: {\n          $ref: '#/components/schemas/Pet',\n        },\n        examples: {\n          cat: {\n            summary: 'An example of a cat',\n            value: {\n              name: 'Fluffy',\n              petType: 'Cat',\n              color: 'White',\n              gender: 'male',\n              breed: 'Persian',\n            },\n          },\n          dog: {\n            summary: \"An example of a dog with a cat's name\",\n            value: {\n              name: 'Puma',\n              petType: 'Dog',\n              color: 'Black',\n              gender: 'Female',\n              breed: 'Mixed',\n            },\n          },\n          frog: {\n            $ref: '#/components/examples/frog-example',\n          },\n        },\n      })\n    })\n  })\n})\n"],
  "mappings": "AAAA,SAAS,UAAU,QAAQ,UAAU;AAErC,SAAS,6BAA6B;AAEtC,SAAS,qBAAqB,MAAM;AAClC,WAAS,mBAAmB,MAAM;AAEhC,OAAG,uBAAuB,MAAM;AAC9B,YAAM,SAAS,sBAAsB,MAAM;AAAA,QACzC,QAAQ;AAAA,UACN,MAAM;AAAA,QACR;AAAA,QACA,UAAU;AAAA,UACR,KAAK;AAAA,YACH,SAAS;AAAA,YACT,OAAO;AAAA,cACL,MAAM;AAAA,cACN,SAAS;AAAA,cACT,OAAO;AAAA,cACP,QAAQ;AAAA,cACR,OAAO;AAAA,YACT;AAAA,UACF;AAAA,UACA,KAAK;AAAA,YACH,SAAS;AAAA,YACT,OAAO;AAAA,cACL,MAAM;AAAA,cACN,SAAS;AAAA,cACT,OAAO;AAAA,cACP,QAAQ;AAAA,cACR,OAAO;AAAA,YACT;AAAA,UACF;AAAA,UACA,MAAM;AAAA,YACJ,MAAM;AAAA,UACR;AAAA,QACF;AAAA,MACF,CAAC;AAED,aAAO,MAAM,EAAE,QAAQ;AAAA,QACrB,QAAQ;AAAA,UACN,MAAM;AAAA,QACR;AAAA,QACA,UAAU;AAAA,UACR,KAAK;AAAA,YACH,SAAS;AAAA,YACT,OAAO;AAAA,cACL,MAAM;AAAA,cACN,SAAS;AAAA,cACT,OAAO;AAAA,cACP,QAAQ;AAAA,cACR,OAAO;AAAA,YACT;AAAA,UACF;AAAA,UACA,KAAK;AAAA,YACH,SAAS;AAAA,YACT,OAAO;AAAA,cACL,MAAM;AAAA,cACN,SAAS;AAAA,cACT,OAAO;AAAA,cACP,QAAQ;AAAA,cACR,OAAO;AAAA,YACT;AAAA,UACF;AAAA,UACA,MAAM;AAAA,YACJ,MAAM;AAAA,UACR;AAAA,QACF;AAAA,MACF,CAAC;AAAA,IACH,CAAC;AAAA,EACH,CAAC;AACH,CAAC;",
  "names": []
}
