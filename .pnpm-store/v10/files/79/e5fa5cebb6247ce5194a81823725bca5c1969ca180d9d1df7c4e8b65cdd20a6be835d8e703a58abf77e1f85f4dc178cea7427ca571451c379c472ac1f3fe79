{
  "version": 3,
  "sources": ["../../src/api-reference/api-reference-configuration.test.ts"],
  "sourcesContent": ["import { describe, expect, it } from 'vitest'\nimport { type ApiReferenceConfiguration, apiReferenceConfigurationSchema } from './api-reference-configuration'\n\ndescribe('api-reference-configuration', () => {\n  describe('schema', () => {\n    it('validates a minimal configuration', () => {\n      const minimalConfig = {}\n      expect(() => apiReferenceConfigurationSchema.parse(minimalConfig)).not.toThrow()\n    })\n\n    it('validates a complete configuration', () => {\n      const completeConfig = {\n        theme: 'default',\n        layout: 'modern',\n        url: 'https://example.com/openapi.json',\n        content: '{\"openapi\": \"3.1.0\"}',\n        proxyUrl: 'https://proxy.example.com',\n        isEditable: true,\n        showSidebar: true,\n        hideModels: false,\n        hideDownloadButton: false,\n        hideTestRequestButton: false,\n        hideSearch: false,\n        darkMode: true,\n        forceDarkModeState: 'dark',\n        hideDarkModeToggle: false,\n        searchHotKey: 'k',\n        favicon: '/favicon.ico',\n        hiddenClients: ['fetch', 'xhr'],\n        defaultHttpClient: {\n          targetKey: 'target1',\n          clientKey: 'client1',\n        },\n        customCss: '.custom { color: red; }',\n        pathRouting: {\n          basePath: '/api',\n        },\n        baseServerURL: 'https://api.example.com',\n        withDefaultFonts: true,\n        defaultOpenAllTags: false,\n        tagsSorter: 'alpha',\n        operationsSorter: 'method',\n        _integration: 'nextjs',\n        hideClientButton: false,\n      }\n\n      expect(() => apiReferenceConfigurationSchema.parse(completeConfig)).not.toThrow()\n    })\n\n    it('validates hiddenClients true', () => {\n      const config = { hiddenClients: true }\n\n      expect(apiReferenceConfigurationSchema.parse(config)).toMatchObject({ hiddenClients: true })\n    })\n\n    it('validates theme enum values', () => {\n      const config = { theme: 'invalid-theme' }\n\n      expect(apiReferenceConfigurationSchema.parse(config)).toMatchObject({ theme: 'default' })\n\n      const validThemes = [\n        'alternate',\n        'default',\n        'moon',\n        'purple',\n        'solarized',\n        'bluePlanet',\n        'deepSpace',\n        'saturn',\n        'kepler',\n        'elysiajs',\n        'fastify',\n        'mars',\n        'none',\n      ]\n\n      validThemes.forEach((theme) => {\n        expect(apiReferenceConfigurationSchema.parse({ theme })).toMatchObject({ theme })\n      })\n    })\n\n    it('validates layout enum values', () => {\n      const config = { layout: 'invalid-layout' }\n      expect(apiReferenceConfigurationSchema.parse(config)).toMatchObject({ layout: 'modern' })\n\n      const validLayouts = ['modern', 'classic']\n      validLayouts.forEach((layout) => {\n        expect(apiReferenceConfigurationSchema.parse({ layout })).toMatchObject({ layout })\n      })\n    })\n\n    it('validates content and url configuration', () => {\n      const validConfigs = [\n        { url: 'https://example.com/openapi.json' },\n        { content: '{\"openapi\": \"3.1.0\"}' },\n        { content: { openapi: '3.1.0' } },\n        { content: () => ({ openapi: '3.1.0' }) },\n        { content: null },\n      ]\n\n      validConfigs.forEach((config) => {\n        expect(() => apiReferenceConfigurationSchema.parse(config)).not.toThrow()\n      })\n\n      const invalidConfigs = [{ url: 999 }, { content: 123 }]\n\n      invalidConfigs.forEach((config) => {\n        expect(() => apiReferenceConfigurationSchema.parse(config)).toThrow()\n      })\n    })\n\n    it('validates function parameters', () => {\n      const config = {\n        generateHeadingSlug: (heading: any) => `#${heading.slug}`,\n        generateModelSlug: (model: { name: string }) => `model-${model.name}`,\n        generateTagSlug: (tag: any) => `tag-${tag.name}`,\n        generateOperationSlug: (operation: { path: string; method: string }) => `${operation.method}-${operation.path}`,\n        generateWebhookSlug: (webhook: { name: string }) => `webhook-${webhook.name}`,\n        onLoaded: () => console.log('loaded'),\n        onSpecUpdate: (spec: string) => console.log('spec updated', spec),\n      }\n\n      expect(() => apiReferenceConfigurationSchema.parse(config)).not.toThrow()\n    })\n\n    it('validates integration enum values', () => {\n      const validIntegrations = [\n        'adonisjs',\n        'docusaurus',\n        'dotnet',\n        'elysiajs',\n        'express',\n        'fastapi',\n        'fastify',\n        'go',\n        'hono',\n        'html',\n        'laravel',\n        'litestar',\n        'nestjs',\n        'nextjs',\n        'nitro',\n        'nuxt',\n        'platformatic',\n        'react',\n        'rust',\n        'svelte',\n        'vue',\n        null,\n      ]\n\n      validIntegrations.forEach((integration) => {\n        expect(() => apiReferenceConfigurationSchema.parse({ _integration: integration })).not.toThrow()\n      })\n\n      expect(() => apiReferenceConfigurationSchema.parse({ _integration: 'invalid-integration' })).toThrow()\n    })\n\n    it('validates sorter configurations', () => {\n      const validConfigs = [\n        { tagsSorter: 'alpha' },\n        { tagsSorter: (a: any, b: any) => a.name.localeCompare(b.name) },\n        { operationsSorter: 'alpha' },\n        { operationsSorter: 'method' },\n        { operationsSorter: (a: any, b: any) => a.path.localeCompare(b.path) },\n      ]\n\n      validConfigs.forEach((config) => {\n        expect(() => apiReferenceConfigurationSchema.parse(config)).not.toThrow()\n      })\n\n      const invalidConfigs = [{ tagsSorter: 'invalid' }, { operationsSorter: 'invalid' }]\n\n      invalidConfigs.forEach((config) => {\n        expect(() => apiReferenceConfigurationSchema.parse(config)).toThrow()\n      })\n    })\n  })\n\n  describe('migrations', () => {\n    it('migrates proxy to proxyUrl', () => {\n      const config = {\n        proxy: 'https://proxy.example.com',\n      }\n\n      const migratedConfig = apiReferenceConfigurationSchema.parse(config)\n\n      expect(migratedConfig.proxyUrl).toBe('https://proxy.example.com')\n      expect(migratedConfig.proxy).toBeUndefined()\n    })\n\n    it('keeps proxyUrl if both proxy and proxyUrl are set', () => {\n      const config = {\n        proxy: 'https://proxy.example.com',\n        proxyUrl: 'https://existing.example.com',\n      }\n\n      const migratedConfig = apiReferenceConfigurationSchema.parse(config)\n      expect(migratedConfig.proxyUrl).toBe('https://existing.example.com')\n      expect(migratedConfig.proxy).toBeUndefined()\n    })\n\n    it('migrates the old proxy URL to the new one', () => {\n      const config = {\n        proxyUrl: 'https://api.scalar.com/request-proxy',\n      }\n\n      const migratedConfig = apiReferenceConfigurationSchema.parse(config)\n      expect(migratedConfig.proxyUrl).toBe('https://proxy.scalar.com')\n      expect(migratedConfig.proxy).toBeUndefined()\n    })\n\n    it('migrates spec.url to url', () => {\n      const config = {\n        spec: {\n          url: 'https://example.com/openapi.json',\n        },\n      }\n\n      const migratedConfig = apiReferenceConfigurationSchema.parse(config)\n\n      expect(migratedConfig.spec).toBeUndefined()\n      expect(migratedConfig.url).toBe('https://example.com/openapi.json')\n    })\n\n    it('migrates spec.content to content', () => {\n      const config = {\n        spec: {\n          content: '{\"openapi\": \"3.1.0\"}',\n        },\n      }\n\n      const migratedConfig = apiReferenceConfigurationSchema.parse(config)\n\n      expect(migratedConfig.spec).toBeUndefined()\n      expect(migratedConfig.content).toBe('{\"openapi\": \"3.1.0\"}')\n    })\n\n    it('allows a function as onDocumentSelect', () => {\n      const config = {\n        onDocumentSelect: () => console.log('selected'),\n      }\n      const migratedConfig = apiReferenceConfigurationSchema.parse(config)\n      expect(migratedConfig.onDocumentSelect).toBeInstanceOf(Function)\n    })\n\n    it('allows a function as onDocumentSelect', () => {\n      const config = {\n        onDocumentSelect: () => console.log('selected'),\n      } satisfies Partial<ApiReferenceConfiguration>\n      const migratedConfig = apiReferenceConfigurationSchema.parse(config)\n      expect(migratedConfig.onDocumentSelect).toBeInstanceOf(Function)\n    })\n\n    it('allows an async function as onDocumentSelect', async () => {\n      const config = {\n        onDocumentSelect: async () => console.log('selected'),\n      } satisfies Partial<ApiReferenceConfiguration>\n      const migratedConfig = apiReferenceConfigurationSchema.parse(config)\n\n      expect(migratedConfig.onDocumentSelect?.()).toBeInstanceOf(Promise)\n    })\n  })\n})\n"],
  "mappings": "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",
  "names": []
}
